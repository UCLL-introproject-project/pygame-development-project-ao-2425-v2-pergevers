Stack Overflow was launched in 2008 by Jeff Atwood and Joel Spolsky. It consist of the possibility to ask help online when you are stuck on a certain problem within IT. You put your question online and other people can see it, comment and give solutions. You can also search for problems people asked before to seek for answers.
Stack Overflow influenced IT big time for a couple of reasons. First of all there is a lot more knowledge sharing which leads to a bigger development of the sector.  Developers across the world can instantly access solutions to problems which reduces time spent troubleshooting.
Something that makes the system great is the community-driven quality control. The upvote/downvote system ensures that the best answers rise to the top, improving the reliability of solutions.
The system also increases the efficiency of problem-solving. Instead of having to look for the official documentation or go trough a trial and error process, you can often find it already on the website and take over from experienced developers.
And last but not least it has created a collaborative culture. There is a reputation system in the website which leads to people giving higher quality answers and more reliability.
While I was working on the project without knowing it I already used it. I was getting an error that what I wanted to do wasnâ€™t possible on a tuple. All of this while I wanted to create a list. So to see what was wrong I went to look online to find the difference between them. I opened the question from someone who asked the same and there were a lot of great answers which explained me briefly but also more complicated answers that helped me to solve the individual problem I was getting on the project.
For example the first answer I see is a more theoretical answer which explains the fundamentals of both. This helped me refresh my memory about both. The second answer however is a more practical one which helped me understand the practical use of it and what I was doing wrong in my code. 
As you can see from my example I spend way less time having to look for what was wrong and it was explained in a very good way which I find harder sometimes when it comes from the official syntax and explanation self. 
Personally I believe this was a great invention that helped the developers who are learning but also the experienced developers to cooperate and share more knowledge than would have been possible before. The reputation system and the votes are also a very good idea for me. It forces answers to be well-developed
